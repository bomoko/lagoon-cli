// Code generated for package lgraphql by go-bindata DO NOT EDIT. (@generated)
// sources:
// _lgraphql/addDeployTargetConfig.graphql
// _lgraphql/addEnvVariable.graphql
// _lgraphql/addGroup.graphql
// _lgraphql/addGroupsToProject.graphql
// _lgraphql/addNotificationEmail.graphql
// _lgraphql/addNotificationMicrosoftTeams.graphql
// _lgraphql/addNotificationRocketChat.graphql
// _lgraphql/addNotificationSlack.graphql
// _lgraphql/addNotificationToProject.graphql
// _lgraphql/addOrUpdateEnvironment.graphql
// _lgraphql/addProject.graphql
// _lgraphql/addRestore.graphql
// _lgraphql/addSshKey.graphql
// _lgraphql/addUser.graphql
// _lgraphql/addUserToGroup.graphql
// _lgraphql/backupsForEnvironmentByName.graphql
// _lgraphql/deleteDeployTargetConfig.graphql
// _lgraphql/deployEnvironmentBranch.graphql
// _lgraphql/deployEnvironmentLatest.graphql
// _lgraphql/deployEnvironmentPromote.graphql
// _lgraphql/deployEnvironmentPullrequest.graphql
// _lgraphql/deployTargetConfigsByProjectId.graphql
// _lgraphql/environmentByName.graphql
// _lgraphql/lagoonSchema.graphql
// _lgraphql/lagoonVersion.graphql
// _lgraphql/me.graphql
// _lgraphql/minimalProjectByName.graphql
// _lgraphql/projectByName.graphql
// _lgraphql/projectByNameMetadata.graphql
// _lgraphql/projectsByMetadata.graphql
// _lgraphql/removeProjectMetadataByKey.graphql
// _lgraphql/switchActiveStandby.graphql
// _lgraphql/taskByID.graphql
// _lgraphql/updateDeployTargetConfig.graphql
// _lgraphql/updateProjectMetadata.graphql
package lgraphql

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __lgraphqlAdddeploytargetconfigGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x4e\xc3\x30\x10\x45\xf7\x3d\x85\x91\x58\xb4\x57\xc8\x16\x36\x6c\x50\x04\x5c\xc0\xc4\x53\x77\x90\x3b\x0e\xd3\x31\xa8\x42\xb9\x3b\x6a\x9c\xd8\xb1\x13\xd5\xcb\xff\xff\xcc\xf8\xfd\x73\x10\x2d\xe8\x49\xed\x77\x4a\x29\xf5\xd8\xb3\xff\x82\x4e\x1a\xf5\x42\xf2\x10\xa5\x5f\x40\x7b\x8a\x4a\x14\x3e\x59\x53\x77\x82\x4b\xa3\xde\x85\x91\xec\x34\x19\x9c\x63\xf8\x0e\x70\x91\xca\x31\xd0\x3b\x7f\xfd\xd0\x6c\xa1\x58\xbc\xd4\xdb\x78\xb7\xd5\x22\xc0\x94\xe6\x0f\x7f\x63\x54\x1b\xf3\xbc\x08\x3f\x79\x3a\xa2\xdd\x23\xf5\x41\x9a\x98\xb8\xbd\xf2\x4e\xb1\x3e\x65\x66\x98\x89\x2a\xe9\x99\x29\xe1\x25\xaf\x24\x2b\x40\x73\x66\xee\x6d\x6e\x70\xf3\x57\x35\xe5\x9d\x0a\xc6\xf9\xe1\x90\xe9\xd0\x6c\xae\xcc\x81\x2a\x74\x7b\xa4\xcf\x50\x08\x47\x46\x20\xe3\xae\xaf\xb5\xd1\x39\x1f\x4c\xcb\xfe\x07\x0d\xf0\xda\x79\x03\x8b\x9e\x92\x3e\xac\x7a\xdb\x2c\xab\x6a\x3d\x22\xed\x86\xff\x00\x00\x00\xff\xff\xbe\x7e\x9c\x20\x74\x02\x00\x00")

func _lgraphqlAdddeploytargetconfigGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAdddeploytargetconfigGraphql,
		"_lgraphql/addDeployTargetConfig.graphql",
	)
}

func _lgraphqlAdddeploytargetconfigGraphql() (*asset, error) {
	bytes, err := _lgraphqlAdddeploytargetconfigGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addDeployTargetConfig.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddenvvariableGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\xca\xc3\x20\x14\x46\xf7\x3c\xc5\xf7\xc3\x3f\x24\x90\x27\x70\xef\x90\x39\xa5\xfb\x6d\x95\x22\x24\x37\x21\xbd\x06\x42\xe9\xbb\x17\xbd\xda\x4a\x07\x97\x73\xd4\xef\xcc\x41\x48\xfc\xc2\x68\x1b\xe0\x5f\x8e\xd5\x19\x9c\x78\xbf\xd0\xe6\xe9\x3a\xb9\xf3\xb1\xba\xbf\xbe\xa8\xc1\x1a\x0c\x2c\x0a\x1e\xb7\xe5\xe7\xf2\x18\x89\x4a\xa6\xd9\x19\x8c\xb2\x79\xbe\x2b\xd9\x69\x0a\x5f\xd4\xe1\xd9\x00\x00\x59\x5b\x7d\xd0\x7a\x5e\x83\x98\xec\x00\xcd\x49\xd3\x7d\x85\x62\x46\xee\x29\x38\xc7\x68\x54\x81\x1a\x91\x5a\x0a\xca\x15\x5a\x93\xd8\xab\xfb\xcc\x79\x5b\x3d\x54\xd9\xc4\xf3\x0e\x00\x00\xff\xff\x1d\x4f\x13\xd7\x24\x01\x00\x00")

func _lgraphqlAddenvvariableGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddenvvariableGraphql,
		"_lgraphql/addEnvVariable.graphql",
	)
}

func _lgraphqlAddenvvariableGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddenvvariableGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addEnvVariable.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddgroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x54\xa8\xe6\x52\x50\x50\x50\x48\x4c\x49\x71\x2f\xca\x2f\x2d\xd0\xc8\xcc\x2b\x28\x2d\xb1\x82\x8a\x2a\x28\x40\x14\x83\xf5\x80\x45\x6a\x35\xe1\x52\x99\x29\x48\x6a\x20\x92\x5c\x20\x0c\x08\x00\x00\xff\xff\x33\xcc\xe8\xad\x6e\x00\x00\x00")

func _lgraphqlAddgroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddgroupGraphql,
		"_lgraphql/addGroup.graphql",
	)
}

func _lgraphqlAddgroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddgroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddgroupstoprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x29\x28\xca\xcf\x4a\x4d\x2e\xb1\x52\x08\x80\x30\x3c\xf3\x0a\x4a\x4b\x14\x75\x40\x52\xe9\x45\xf9\xa5\x05\xc5\x56\x0a\xd1\xee\x20\x06\x44\x22\x56\x51\x53\xa1\x9a\x4b\x41\x41\x41\x21\x31\x25\x05\x2c\x5e\x1c\x92\x0f\xd5\xaa\x91\x09\x52\x62\x05\x95\x57\x50\x80\x1b\x0d\xb3\x04\x2a\x0e\x33\x17\x6a\x01\x58\xb4\x56\x13\xae\x2d\x33\x05\xca\xc8\x4b\xcc\x4d\x85\x48\x72\x81\x30\x20\x00\x00\xff\xff\x8b\x70\xd6\xd3\xb8\x00\x00\x00")

func _lgraphqlAddgroupstoprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddgroupstoprojectGraphql,
		"_lgraphql/addGroupsToProject.graphql",
	)
}

func _lgraphqlAddgroupstoprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddgroupstoprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addGroupsToProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationemailGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x89\xa4\xe6\x26\x66\xe6\x38\xa6\xa4\x14\xa5\x16\x17\xc3\x65\x34\x15\xaa\xb9\x14\x14\x14\x14\x12\x53\x52\xfc\xf2\x4b\x32\xd3\x32\x93\xc1\x66\xb8\x82\xd4\x6a\x64\xe6\x15\x94\x96\x58\x41\x55\x28\x28\x40\x8c\x04\x9b\xac\x03\x15\x42\x35\x13\xc5\x0a\xb0\x8a\x5a\x4d\xb8\xee\xcc\x14\x24\x63\x20\x92\x5c\x20\x0c\x08\x00\x00\xff\xff\x7d\x3b\x64\xad\xb7\x00\x00\x00")

func _lgraphqlAddnotificationemailGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationemailGraphql,
		"_lgraphql/addNotificationEmail.graphql",
	)
}

func _lgraphqlAddnotificationemailGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationemailGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationEmail.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationmicrosoftteamsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x89\x94\xa7\x26\x65\xe4\xe7\x67\xc3\x05\x35\x15\xaa\xb9\x14\x14\x14\x14\x12\x53\x52\xfc\xf2\x4b\x32\xd3\x32\x93\xc1\xda\x7d\x33\x93\x8b\xf2\x8b\xf3\xd3\x4a\x42\x52\x13\x73\x8b\x35\x32\xf3\x0a\x4a\x4b\xac\xa0\x4a\x15\x14\x20\xc6\x82\x4d\xd7\x81\x0a\xc1\xcd\x85\xd9\x00\x16\xaf\xd5\x84\xeb\xc9\x4c\x41\xd2\x0c\x91\xe4\x02\x61\x40\x00\x00\x00\xff\xff\x97\x56\x46\x93\xb1\x00\x00\x00")

func _lgraphqlAddnotificationmicrosoftteamsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationmicrosoftteamsGraphql,
		"_lgraphql/addNotificationMicrosoftTeams.graphql",
	)
}

func _lgraphqlAddnotificationmicrosoftteamsGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationmicrosoftteamsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationMicrosoftTeams.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationrocketchatGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x31\x0e\xc2\x30\x0c\x45\xf7\x9c\xe2\x23\x31\xb4\x52\x4f\xd0\x95\x9d\x01\x4e\x60\x92\x40\xac\x52\x1b\x21\x57\x0c\x88\xbb\xa3\xa6\x49\x04\x83\x97\xf7\xad\xf7\xe6\xc5\xc8\x58\x05\x9d\x03\xf6\x42\x73\x1c\x71\xb6\x27\xcb\x6d\x37\xac\xc4\x27\x12\x89\xf7\x7f\xf8\x8a\x97\xa4\x3a\x35\xd8\xe3\xed\x00\x80\x42\x38\xaa\xf1\x95\x7d\x76\x9e\xd4\x4f\xd1\x0e\x89\xac\x63\x79\x2c\x36\x96\x37\x60\xeb\xe4\xdc\x50\x50\x0b\xd5\x64\x1d\x5a\xac\x66\x33\xff\xf4\x4d\xc6\xe1\xc7\xba\x8d\x6e\xbd\x6f\x00\x00\x00\xff\xff\x53\x0f\xa2\x30\xdb\x00\x00\x00")

func _lgraphqlAddnotificationrocketchatGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationrocketchatGraphql,
		"_lgraphql/addNotificationRocketChat.graphql",
	)
}

func _lgraphqlAddnotificationrocketchatGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationrocketchatGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationRocketChat.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationslackGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x41\x0e\x82\x40\x0c\x45\xf7\x73\x8a\x6f\xe2\x02\x12\x4e\xc0\x21\xdc\x70\x82\x3a\x33\x4a\x03\xb4\xc6\x94\xb8\x30\xde\xdd\x30\x30\x8d\x2e\xba\x79\xbf\x79\x6f\x59\x8d\x8c\x55\xd0\x04\xe0\x2c\xb4\xe4\x1e\x83\x3d\x59\xee\xa7\x6e\x23\x71\x24\x91\x3c\xff\xc3\x57\xbe\x8e\xaa\x93\xc3\x16\xef\x00\x00\x94\xd2\x45\x8d\x6f\x1c\x8b\x73\x98\x29\x4e\x0d\xcb\x63\xb5\xfe\xf8\x00\xf6\x44\x29\x75\x07\xf2\x46\xad\xd5\xc1\x3b\xb5\x58\xf8\xa7\x75\x19\xa7\x1f\xeb\x3e\x86\xed\xbe\x01\x00\x00\xff\xff\xd9\x6e\xb4\xda\xd6\x00\x00\x00")

func _lgraphqlAddnotificationslackGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationslackGraphql,
		"_lgraphql/addNotificationSlack.graphql",
	)
}

func _lgraphqlAddnotificationslackGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationslackGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationSlack.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationtoprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x29\x28\xca\xcf\x4a\x4d\x2e\xb1\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x09\xe6\xe5\x97\x64\xa6\x65\x26\x83\x95\x85\x54\x16\xa4\x5a\x29\xf8\xa1\x89\x60\xaa\xf3\x4b\xcc\x4d\x85\x9b\xa2\xa9\x50\xcd\xa5\xa0\xa0\xa0\x90\x98\x92\x82\xa2\x33\x3f\x00\x62\x9d\x46\x66\x5e\x41\x69\x89\x15\x54\x95\x82\x02\xdc\x15\x30\xf7\x40\xc5\x31\x1d\x82\xe1\x36\x2c\x2a\x21\x4e\xc1\x70\x1d\x58\x65\xad\x26\xdc\xd2\xcc\x14\x98\x5e\xb8\x24\x17\x08\x03\x02\x00\x00\xff\xff\x5d\xba\xcd\xcd\x21\x01\x00\x00")

func _lgraphqlAddnotificationtoprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationtoprojectGraphql,
		"_lgraphql/addNotificationToProject.graphql",
	)
}

func _lgraphqlAddnotificationtoprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationtoprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationToProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddorupdateenvironmentGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcd\x4a\xc5\x30\x10\x85\xf7\x7d\x8a\x11\x5c\xdc\x0b\xf7\x09\xb2\x14\x0b\xba\x51\xf1\xe7\x01\x82\x99\x6a\xa4\x9d\x84\x74\x5a\x28\xe2\xbb\x4b\x9b\x26\x9d\xf4\x76\x51\x28\xe7\x9c\xcc\xcc\xf9\xba\x81\x35\x5b\x47\x70\xaa\x00\x6e\x49\x77\xa8\xe0\x8d\x83\xa5\xaf\x9b\xcb\xac\xf8\xe0\x7e\xf0\x93\x15\x3c\x12\x47\xc5\xa0\x6f\xdd\xf4\x3e\x79\x54\x70\x9f\xff\xa5\x77\xa7\x7b\x7c\xc5\xa6\x1c\x14\xad\x07\xd4\x46\x58\x72\xa0\xe5\x16\x0b\x1d\x69\xb4\xc1\x51\x87\xc4\x71\x5b\x4d\xe3\xb6\xca\x79\xa4\xfe\xdb\x36\xfc\x12\x2f\x7c\x92\xa7\x9f\xe1\xb7\x02\x00\xd0\xc6\x3c\x87\x0f\x6f\x34\x63\xbd\x4d\x3b\x59\xf2\x03\xab\x35\x03\x10\x5b\x2f\xe5\x2f\xab\x94\x6b\x27\x00\xc9\x90\xed\x05\x8a\xd2\xce\x00\x4a\x20\x65\x28\xa3\x28\xd1\xec\x16\x45\x2a\x92\x51\x0a\x5c\xe1\xd9\x03\x4b\xc1\x63\x52\x87\x00\x97\x17\x7f\xe7\x4c\xc6\x1a\x81\x28\x9a\xd5\xfc\xfd\x07\x00\x00\xff\xff\x2f\xb0\x49\x31\x36\x02\x00\x00")

func _lgraphqlAddorupdateenvironmentGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddorupdateenvironmentGraphql,
		"_lgraphql/addOrUpdateEnvironment.graphql",
	)
}

func _lgraphqlAddorupdateenvironmentGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddorupdateenvironmentGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addOrUpdateEnvironment.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4b\x6e\x2a\x31\x10\x45\xe7\xac\xc2\x48\x6f\x00\x12\x2b\x60\xfa\x92\x01\x4a\x06\x28\x24\x0b\x30\xed\x02\x9c\xd8\xae\x8e\x5d\x6e\x09\x45\xd9\x7b\xd4\x1f\xff\xc0\xf4\xa0\x27\xf7\x56\xb5\xac\x3a\x47\x7b\xe2\x24\xd1\xb0\xd5\x82\xb1\x7f\x86\x6b\xd8\xb2\x03\x59\x69\xce\xcb\x4d\x9f\x9c\x25\x7d\x58\x55\x66\xce\x1f\x4f\xa8\x04\xd8\x10\x0f\x29\xb6\x60\xdc\x45\x9e\x68\xcb\x76\x86\x96\x65\xb6\xb7\xf8\x09\x0d\xed\x39\x11\x58\x53\xec\xf1\x86\x64\x07\x87\xab\x23\xd0\xee\x09\x5a\x85\xd7\xc7\xfd\xde\xa2\x46\x82\xc7\x03\x6f\xa0\xb1\x9b\xe9\xdf\xb9\xfb\x2a\xda\xa3\xe5\xa6\xb9\x80\x2b\xc2\xd6\x2b\x65\xe1\xdb\x83\xa3\x9b\xc2\xa2\xf0\x4d\x7f\xb0\x67\xd3\x49\x8b\x46\x83\xa1\xf2\x3a\xdc\x13\xee\x84\x82\xe1\x0c\xe3\xbd\x08\x2d\x3f\xc3\x7f\xae\x9a\x14\x0a\xe8\x40\x61\xdb\xef\x67\xbf\x72\xaf\x52\x4b\x4a\x53\xad\x95\x1d\x27\x78\x81\x78\x93\x35\xfb\x59\x30\xc6\x18\x17\x62\x3a\xea\x4a\x9a\xd6\xd3\x76\xca\x19\x1b\x21\x0e\x2c\x37\x53\x14\x28\x4e\x38\x43\x9c\x81\x4c\x50\x43\x99\xf1\x4c\x1c\xef\xca\x5b\xb0\x8f\x90\x87\xc5\x2a\xed\x9a\x03\xd5\x85\x88\xbf\x6a\x45\x75\x25\x08\x51\xd3\xa4\xba\x30\x1a\x72\x6f\x4d\x18\x4e\xc2\x44\x77\x42\x55\x6a\x53\x58\x14\x47\xea\x02\xd5\xc5\x8a\xef\x8b\x4a\x45\xbb\x22\xc2\xdc\xad\xdc\xb4\x30\x30\xef\xd9\xac\x86\xe9\xcd\x49\xc2\xcc\xc8\xa1\xfd\x5d\x47\xef\xa4\xc8\x04\x1c\xcb\x45\xff\xfd\x05\x00\x00\xff\xff\xd3\x71\xbe\x59\x63\x04\x00\x00")

func _lgraphqlAddprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddprojectGraphql,
		"_lgraphql/addProject.graphql",
	)
}

func _lgraphqlAddprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddrestoreGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x49\x4a\x4c\xce\x2e\x2d\xc8\x4c\xb1\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x54\xa8\xe6\x52\x50\x50\x50\x48\x4c\x49\x09\x4a\x2d\x2e\xc9\x2f\x4a\xd5\xc8\xcc\x2b\x28\x2d\xb1\x52\xa8\x86\xa8\xf5\x4c\xb1\x42\x68\xab\x85\x29\x57\x50\xc8\x4c\x01\x33\x6a\xb9\x40\x18\x10\x00\x00\xff\xff\xdc\x18\x6c\xe7\x65\x00\x00\x00")

func _lgraphqlAddrestoreGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddrestoreGraphql,
		"_lgraphql/addRestore.graphql",
	)
}

func _lgraphqlAddrestoreGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddrestoreGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addRestore.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddsshkeyGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\x11\x3c\xb4\xe0\x17\xf4\xee\xc9\xa3\xe2\x7d\x21\x41\x17\x9b\x58\xda\xe4\x50\x24\xff\x2e\xe9\xa6\x59\xc1\x53\xc2\x9b\x61\xdf\xf8\x14\x29\xf2\x3b\xa0\x33\xc0\x31\x90\x77\x03\xae\x71\xe6\xf0\x38\x9c\x0a\x79\xb9\xf5\x4e\x63\xfa\xa7\xb7\x75\x2a\x70\x79\x5e\xe4\x2f\x41\x5a\xdc\x7c\xf6\xc4\x63\xeb\xf7\xf8\x18\x00\x20\x6b\xa5\xdc\x71\x98\x52\x1c\x2a\x06\xc4\xb9\xa9\x2b\x51\x67\xd3\x6b\x22\xde\x7d\x41\xe5\x45\xab\x17\x01\x27\x13\x74\x4e\x4d\xf2\xf6\xe6\xbe\x55\xd9\xfe\xac\x30\x7b\x25\x9b\x6f\x00\x00\x00\xff\xff\xbf\xff\xb7\x89\x17\x01\x00\x00")

func _lgraphqlAddsshkeyGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddsshkeyGraphql,
		"_lgraphql/addSshKey.graphql",
	)
}

func _lgraphqlAddsshkeyGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddsshkeyGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addSshKey.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAdduserGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\x78\x48\x0c\xad\xc4\x09\x7a\x08\x16\xc4\x01\x2c\x12\x90\xa5\xda\x45\xa9\x3b\x21\xee\x8e\xda\x3a\x69\x06\x06\x2f\xff\x1b\x3e\xcb\x62\x64\x3c\x29\xba\x00\x9c\x93\x10\x8f\x03\x6e\x96\x59\x5f\xa7\xcb\x9a\x9e\x9c\x67\xbb\x92\xa4\x92\xb7\x3a\xd2\x9f\xf8\x98\x44\x92\x5a\x69\x3d\x3e\x01\x00\x28\xc6\xfb\x9c\x72\xc7\xfa\x5e\x6c\xf0\x08\xb8\xb5\x9b\xde\x1a\xec\x80\x7d\x3b\xc8\xaa\xfb\x52\xdd\xf2\xc1\xd6\xbf\x7d\xa5\x38\xb6\xe6\xbe\x86\xf5\x7e\x01\x00\x00\xff\xff\xf7\xf8\x9f\x0d\xfe\x00\x00\x00")

func _lgraphqlAdduserGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAdduserGraphql,
		"_lgraphql/addUser.graphql",
	)
}

func _lgraphqlAdduserGraphql() (*asset, error) {
	bytes, err := _lgraphqlAdduserGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addUser.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddusertogroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x0a\xc3\x30\x0c\x84\xf7\x3c\xc5\x05\x3a\x24\xd0\x27\xf0\x5e\xba\x75\xe8\xcf\x03\x18\x6c\x82\x20\xb6\x83\x62\x4f\x21\xef\x5e\xa4\xb8\xf1\xd2\x41\x20\xee\x8e\xfb\x2e\x94\x6c\x33\xa5\x88\xa1\x03\x2e\x65\xf5\x7c\x0b\x96\x66\x83\x57\x66\x8a\x53\x7f\x15\x79\xe2\x54\x96\x87\x0d\xfe\x8f\xfc\x4c\xb3\x37\xb8\xff\xde\x7e\xc4\xd6\x01\x80\x75\xee\xb3\x7a\x7e\x27\xb5\x06\x8a\x4b\xc9\xa6\x7a\x80\x80\x0c\x36\xf8\x03\xd6\xc0\xd8\x6b\x42\xcb\x25\x12\x95\xdb\x36\x9c\x09\x56\x72\x5b\xa1\xf2\x3e\x9e\x0c\x72\xf5\x91\x86\xc3\xec\xe4\xbe\x01\x00\x00\xff\xff\x00\xb0\x61\x57\xf3\x00\x00\x00")

func _lgraphqlAddusertogroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddusertogroupGraphql,
		"_lgraphql/addUserToGroup.graphql",
	)
}

func _lgraphqlAddusertogroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddusertogroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addUserToGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlBackupsforenvironmentbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x6e\x84\x30\x0c\x85\xf7\x39\xc5\x43\xea\x02\x24\x4e\xc0\xb2\x3b\xa4\xaa\x9b\x9e\x20\x0d\x56\x95\xb6\x24\x8c\xe3\x8c\x84\x10\x77\x1f\xf1\x33\x99\xc0\xcc\xca\xce\x67\xbf\xcf\xb9\x44\xe2\x11\xa5\x02\xde\x9c\xee\xa9\xc1\x97\xb0\x75\x3f\x45\xbd\x90\x81\xfd\x2f\x19\x69\xd0\x3a\x29\x2a\x4c\x0a\x00\xc8\x5d\x2d\x7b\xd7\x93\x93\xf7\xf1\x53\xf7\x54\xae\x18\xd8\xf2\xab\xa6\xde\x51\x12\xdc\x55\xd5\x3e\x98\xf6\x0a\xd8\x2e\xb5\x4b\x32\x3d\xbe\xb5\xf9\x8b\x43\x78\x2c\x1e\x56\x81\xe0\x23\x1b\xca\xc0\x16\x68\xf3\x1d\xc3\xa4\x85\x72\xd2\xd1\x3f\x1d\x09\x53\x10\xcf\x94\xdf\x39\x5d\x02\x82\x68\x89\xe1\x80\x9e\xd5\x2f\x7f\x90\xfc\x1f\xde\x68\xb1\xde\x65\xb3\x59\x9d\xbb\xa5\xce\xea\x16\x00\x00\xff\xff\x0c\x15\x4e\x54\x93\x01\x00\x00")

func _lgraphqlBackupsforenvironmentbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlBackupsforenvironmentbynameGraphql,
		"_lgraphql/backupsForEnvironmentByName.graphql",
	)
}

func _lgraphqlBackupsforenvironmentbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlBackupsforenvironmentbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/backupsForEnvironmentByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeletedeploytargetconfigGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x50\x50\xc9\x4c\xb1\x52\xf0\xcc\x2b\x51\x84\xf0\x0a\x8a\xf2\xb3\x52\x93\x4b\xa0\x42\x9a\xd5\x60\xd1\x94\xd4\x9c\xd4\x92\x54\x97\xd4\x82\x9c\xfc\xca\x90\xc4\xa2\xf4\xd4\x12\xe7\xfc\xbc\xb4\xcc\x74\x8d\xcc\xbc\x82\xd2\x12\x2b\x88\x22\x10\x00\x99\xa5\x92\x99\x02\xe7\xc3\x4d\x83\x99\x0b\x96\xa9\xd5\xe4\xaa\x05\x04\x00\x00\xff\xff\x66\x8a\x2f\xa2\x86\x00\x00\x00")

func _lgraphqlDeletedeploytargetconfigGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeletedeploytargetconfigGraphql,
		"_lgraphql/deleteDeployTargetConfig.graphql",
	)
}

func _lgraphqlDeletedeploytargetconfigGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeletedeploytargetconfigGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deleteDeployTargetConfig.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeployenvironmentbranchGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x0a\xc2\x30\x10\x45\xf7\x39\xc5\x2f\xb8\x68\xa1\x27\xc8\xb2\xe8\xd6\x85\x9e\x20\xd6\x51\x23\xed\xa4\x0c\x53\x41\xa4\x77\x97\x36\x89\x56\x70\x35\xcc\xfb\x9f\xcf\xeb\x47\x75\xea\x03\xa3\x34\xc0\x66\x90\x70\xa7\x56\x2d\x8e\x2a\x9e\xaf\x45\x8d\x99\x9e\xc4\x71\x7b\xfb\x0b\x0f\x74\xc9\xbc\x9e\xa9\x90\x8e\xc2\x5b\xa7\xce\xa2\x09\xa1\x23\xc7\x45\x85\x97\x01\x80\x33\x0d\x5d\x78\xee\xf8\xe1\x25\x70\x4f\xac\xcd\x32\x51\x7a\x1e\x46\xb5\xa9\x04\x64\x87\xfc\x03\xec\x7a\xb2\x1f\xb9\x84\xa7\x74\xa3\xc7\x3e\x56\xe2\xf3\x93\x2c\x86\x5f\xdb\x94\xad\x3d\x57\xd2\x26\x2f\x57\x66\x7a\x07\x00\x00\xff\xff\xb1\xcb\x5e\x73\x1a\x01\x00\x00")

func _lgraphqlDeployenvironmentbranchGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentbranchGraphql,
		"_lgraphql/deployEnvironmentBranch.graphql",
	)
}

func _lgraphqlDeployenvironmentbranchGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentbranchGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentBranch.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeployenvironmentlatestGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcd\x41\x0a\xc2\x40\x0c\x85\xe1\xfd\x9c\xe2\x15\xba\x68\xc1\x13\xcc\x52\x74\x21\x78\x89\x80\x59\x0c\xb4\x49\x19\xdf\x08\x22\xbd\xbb\x28\x03\xc6\x65\x78\xf9\xf9\xd6\x46\x61\x71\xc3\x94\x80\x51\xed\x51\xaa\xdb\xaa\xc6\x8c\xf3\xef\xb8\xd8\xd6\x38\x1c\x30\x56\x65\xab\x76\x12\x4a\xc6\xd1\x7d\x51\xb1\x61\xc6\x2b\x01\xc0\x4d\xb7\xc5\x9f\xa1\xba\x0a\xf5\xce\xa9\x7c\xe2\xdc\x9f\x80\x3f\x23\x8a\x7d\x8f\x44\xf0\xbe\xeb\x9e\x80\x39\xed\xef\x00\x00\x00\xff\xff\xf5\x45\x27\xcb\xb5\x00\x00\x00")

func _lgraphqlDeployenvironmentlatestGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentlatestGraphql,
		"_lgraphql/deployEnvironmentLatest.graphql",
	)
}

func _lgraphqlDeployenvironmentlatestGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentlatestGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentLatest.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeployenvironmentpromoteGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\xaa\x83\x30\x10\x45\xf7\xf9\x8a\x2b\xbc\x85\xc2\xfb\x82\x2c\x1f\xaf\xfb\x42\xbf\x20\xe8\x50\x52\xcc\x8c\xc4\x49\xa1\x14\xff\xbd\xd8\x1a\x6b\xab\xae\x02\xb9\xe7\x0c\x33\x37\x24\x75\xea\x85\x51\x1a\xe0\xa7\x8b\x72\xa1\x5a\x2d\x4e\x1a\x3d\x9f\x8b\x5f\x8c\xbf\xbd\xa4\x58\xd3\x81\xaf\x3e\x0a\x07\xe2\xef\xbc\xa1\x5e\x3d\x3f\xc7\x6c\x42\x23\x13\x49\x53\xe4\x7f\xa7\xce\xe2\x4f\xa4\x25\xc7\x45\x85\xbb\x01\x80\x86\xba\x56\x6e\x0b\xf5\x18\x25\x88\x52\xe9\xb9\x4b\x6a\x5f\x10\xb0\x5e\x23\x27\x00\xbb\x40\x76\x63\xd3\x19\xc8\x97\xbd\x95\x59\x9a\xa2\x39\x18\xcc\xe7\xbb\x56\x37\xc5\x8c\xef\xb5\xb1\x53\xd3\x64\x2d\xfb\x59\x94\x65\xf2\xe4\xca\x0c\x8f\x00\x00\x00\xff\xff\xcd\xc9\x92\xe1\xab\x01\x00\x00")

func _lgraphqlDeployenvironmentpromoteGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentpromoteGraphql,
		"_lgraphql/deployEnvironmentPromote.graphql",
	)
}

func _lgraphqlDeployenvironmentpromoteGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentpromoteGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentPromote.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeployenvironmentpullrequestGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\x8f\xc4\xa2\x95\x7a\x02\x2f\x2b\x58\x74\x83\x2a\x38\xc1\xb4\x1d\xa8\x91\x33\x0e\xd3\x31\x12\x42\xbd\x3b\x4a\x33\x85\xc6\x51\x77\xc9\xff\x7f\x2c\xbd\xd7\x15\x23\x8b\x59\xb0\x68\x80\x87\x5e\xf3\x07\xef\x2d\x60\x3b\x7e\x6c\xa4\x2f\xd6\xae\x30\x74\x52\xba\x1d\x6b\xc0\x46\xac\x5d\x0d\x81\x45\x4b\x1c\xf0\x6a\x1a\xe5\x7d\x8c\x76\x74\xe2\xb5\x92\xec\x8f\xcf\xd4\xdd\xed\x5e\xf8\x6d\x5a\x1d\x99\x0e\xf7\xce\xfe\xbb\xd9\x99\xb2\x15\x95\x47\x32\x0a\x58\xe7\x9c\x98\xa4\x5d\xe2\xa7\x01\x80\x03\xf7\x29\x7f\x3f\xc9\x57\xd4\x2c\x1d\x8b\x6d\x4b\x4a\xca\x9f\x85\x4f\xb6\x88\x03\x56\xf0\x25\xf0\x47\x7d\xe5\xf7\xfc\x4a\xec\xe8\x9e\x3a\xf6\x88\xef\x59\xcd\x5d\x89\x98\xad\x2e\x28\x53\x23\xbe\xa9\x55\x54\x6e\x66\xab\xf1\xa5\xc9\xbf\x6f\x6e\xed\xdc\xa8\xba\xb4\xe7\x06\x58\x36\xe7\xdf\x00\x00\x00\xff\xff\x49\x97\xf5\x67\xfd\x01\x00\x00")

func _lgraphqlDeployenvironmentpullrequestGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentpullrequestGraphql,
		"_lgraphql/deployEnvironmentPullrequest.graphql",
	)
}

func _lgraphqlDeployenvironmentpullrequestGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentpullrequestGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentPullrequest.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeploytargetconfigsbyprojectidGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\xca\xc2\x30\x10\x84\xef\x79\x8a\xfd\xe1\x3f\xe8\x2b\x78\xd4\x53\x2f\x52\xc4\x17\xa8\xcd\x34\x8d\xc4\x6c\xbb\x4d\x94\x20\x7d\x77\x69\x82\xa5\xe6\x90\x65\xbf\xd9\x19\x66\x8c\x90\x44\x3b\x45\xf4\x3f\x08\xdf\xd1\x86\x03\x55\x3e\xfc\xa9\xfd\x5b\x11\x69\x0c\x8e\xd3\xb5\x11\x83\x70\x62\xdf\x59\x33\x1d\x53\x5d\xee\x2a\xbd\xb8\x88\x56\xdb\x37\x40\x11\x65\x33\x91\xd5\x79\x6c\x53\x8a\xb0\x11\x97\xe7\x9b\x07\xd6\xa5\x13\x0b\xaf\x5d\x3a\x6f\x61\xeb\x38\xea\x5a\xf8\x69\x35\xe4\x97\x5e\x60\x2c\xfb\xcc\xe6\xfc\xdf\xa4\xf1\x6d\x8f\xa9\xb4\x8b\xce\x09\xc6\x88\x29\x14\xf0\x82\x35\xfd\xd2\x71\x56\xf3\x27\x00\x00\xff\xff\xba\x92\xa1\x8b\xfd\x00\x00\x00")

func _lgraphqlDeploytargetconfigsbyprojectidGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeploytargetconfigsbyprojectidGraphql,
		"_lgraphql/deployTargetConfigsByProjectId.graphql",
	)
}

func _lgraphqlDeploytargetconfigsbyprojectidGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeploytargetconfigsbyprojectidGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployTargetConfigsByProjectId.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlEnvironmentbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x4d\x0e\x82\x30\x10\x85\xf7\x9c\xe2\x91\xb8\x80\x84\x13\xb0\x74\xe7\x86\x98\xe8\x05\x08\x1d\xb5\x06\xa6\xb5\x0c\x26\x0d\xf1\xee\x86\x1f\x5b\x70\xd1\xb4\xdf\xd7\xce\xeb\x7b\x0d\xe4\x3c\xb2\x04\x38\x70\xdd\x51\x89\x8b\x38\xcd\xf7\xb4\x98\x8c\x75\xe6\x49\x8d\x94\x38\xb1\xa4\x39\xc6\x04\x00\x88\xdf\xda\x19\xee\x88\xe5\xe8\xab\xba\xa3\x6c\xd6\xc0\x32\x3f\xc7\x14\xab\x0a\x01\xbf\xa8\x7c\xbd\x18\xd7\x1d\xd0\x2a\x1c\xa7\xc9\x00\xce\x0c\xf2\x47\x7d\x40\x45\xb6\x35\xfe\xea\x6d\x7c\xb1\xa9\xb5\xf3\xc6\x12\xf7\x0f\x7d\x93\xf3\xd2\xa0\xda\x7e\x32\x58\x55\x0b\xc5\x06\x8d\xa3\x1d\x2b\x6a\x29\xf2\x27\x99\xd6\x37\x00\x00\xff\xff\xd5\xce\x35\x6e\x32\x01\x00\x00")

func _lgraphqlEnvironmentbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlEnvironmentbynameGraphql,
		"_lgraphql/environmentByName.graphql",
	)
}

func _lgraphqlEnvironmentbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlEnvironmentbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/environmentByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlLagoonschemaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\x88\x8f\x2f\x4e\xce\x48\xcd\x4d\x04\x73\x14\x14\x4a\x2a\x0b\x52\x8b\xa1\x6c\x05\x85\xec\xcc\xbc\x14\x28\x33\x2f\x31\x37\x15\xca\x4c\xcb\x4c\xcd\x49\x29\xd6\xc8\xcc\x4b\xce\x29\x4d\x49\x75\x49\x2d\x28\x4a\x4d\x4e\x2c\x49\x4d\xb1\x2a\x29\x2a\x4d\xd5\x84\x6b\x46\xd1\x53\xcb\x05\x23\x6b\xb9\x6a\x01\x01\x00\x00\xff\xff\x29\x07\x39\xef\x7e\x00\x00\x00")

func _lgraphqlLagoonschemaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlLagoonschemaGraphql,
		"_lgraphql/lagoonSchema.graphql",
	)
}

func _lgraphqlLagoonschemaGraphql() (*asset, error) {
	bytes, err := _lgraphqlLagoonschemaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/lagoonSchema.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlLagoonversionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\xc8\x49\x4c\xcf\xcf\xcf\x0b\x4b\x2d\x2a\xce\xcc\xcf\xe3\xaa\x05\x04\x00\x00\xff\xff\x42\xb4\x77\x45\x19\x00\x00\x00")

func _lgraphqlLagoonversionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlLagoonversionGraphql,
		"_lgraphql/lagoonVersion.graphql",
	)
}

func _lgraphqlLagoonversionGraphql() (*asset, error) {
	bytes, err := _lgraphqlLagoonversionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/lagoonVersion.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlMeGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\x50\x50\xc8\x4d\x85\x32\x40\x20\x33\x05\xce\x4c\xcd\x4d\xcc\xcc\x81\xf3\xd2\x32\x8b\x8a\x4b\xfc\x12\x73\x53\xe1\x22\x39\x89\x68\x02\xc5\xc5\x19\xde\xa9\x95\xc5\x48\xa6\xa1\x99\x08\x02\x79\xc8\x3a\x40\x20\x3b\xb5\x32\xa4\xb2\x00\x43\x2c\x2c\x31\xa7\x14\x43\xd0\x2d\x33\x2f\x3d\xb5\xa8\xa0\x28\x33\xaf\x04\x45\x2a\xb9\x28\x35\xb1\x24\x15\x61\x51\x2d\x17\x84\xac\x05\x04\x00\x00\xff\xff\x19\x81\x0c\x89\xe8\x00\x00\x00")

func _lgraphqlMeGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlMeGraphql,
		"_lgraphql/me.graphql",
	)
}

func _lgraphqlMeGraphql() (*asset, error) {
	bytes, err := _lgraphqlMeGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/me.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlMinimalprojectbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x4a\x04\x31\x10\x44\xef\xf3\x15\x2d\x78\x58\x7f\xc1\xa3\xe8\x41\x10\x19\x5c\xfd\x80\x38\x53\xee\x46\x93\xee\x6c\xa7\x33\x30\xc8\xfe\xbb\xcc\x2e\x26\x2b\x8c\xb9\x24\xa9\x57\x49\x17\x75\x28\xd0\x99\x36\x1d\xd1\x35\xbb\x88\x5b\xda\x9a\x7a\xde\x5d\xdd\xd0\x77\x47\x44\x94\x54\x3e\x31\xd8\xdd\xfc\xec\x22\x36\x27\x89\xe8\xec\x3c\x3d\xf8\xf5\x2d\xcb\x8f\xf5\xb8\xa0\x7a\x71\xc5\xe4\x71\x0c\x4d\x78\x57\xc7\xc3\x1e\xb9\x0a\xa9\x84\xa0\x38\x14\x64\xbb\x10\x55\xc6\x32\x98\x17\x7e\xe0\xc9\xab\x70\x04\x5b\xfb\x74\x30\x3f\x61\x3b\x67\x43\xcc\xf7\x48\x41\xe6\x75\xf6\xea\xf2\xd7\x3a\x79\x41\x94\x09\xeb\xac\x57\x89\x62\x0d\x4a\x02\xe7\xbd\xff\xb0\xfe\x5c\x48\xef\xcc\xa0\x5c\xf9\x88\x09\x41\xd2\x12\xf1\x22\x6d\x7e\xf2\xd1\xb7\xcc\x3b\x6f\x6f\x1a\xfe\xef\xa5\x0e\x69\x9d\xfe\x69\xf5\xd8\xb5\xfd\xd8\xfd\x04\x00\x00\xff\xff\xe6\xc6\xf6\xf5\xbb\x01\x00\x00")

func _lgraphqlMinimalprojectbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlMinimalprojectbynameGraphql,
		"_lgraphql/minimalProjectByName.graphql",
	)
}

func _lgraphqlMinimalprojectbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlMinimalprojectbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/minimalProjectByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlProjectbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x6f\xd3\x4c\x10\xbe\xf7\x57\xcc\x5b\xbd\x87\x72\xb1\x80\x23\x37\x5a\xaa\x82\x0a\x21\x4a\x42\xae\xd5\xc4\x1e\xc7\x4b\xd6\x3b\xce\xec\xd8\xc8\x8a\xf2\xdf\x91\x13\xe1\xcf\x6d\xda\x03\x62\x2f\xd9\x3c\xcf\x78\xe6\xd9\xf9\xda\x97\x24\x35\xdc\x5c\x01\xfc\xef\x30\xa7\x0f\xb0\x54\x31\x6e\xfb\xdf\x1b\x38\x5c\x01\x00\x14\xc2\x3f\x29\xd6\xdb\x7a\x86\x39\xdd\x9c\x20\x80\xb3\xe5\xe9\x83\x3f\x76\xcd\x31\x49\x7b\x6d\xa8\xf6\x0f\x96\xca\x5f\x12\xdb\x01\x1b\x41\x17\x67\xe4\x5b\xa0\x28\xad\x15\xda\x97\xe4\xb5\x07\x8a\xa9\x50\xe9\x91\xea\x1e\xc4\x49\x19\xab\x61\x77\xef\x2a\x23\xec\x72\x72\xda\xc5\x89\xd5\x54\xb4\xac\xbd\x52\xee\x3f\x51\x61\xb9\x0e\x73\x2b\xf4\xbb\x30\xb3\xa0\x9c\x2b\x0a\x73\x73\xe1\x9c\xb5\x23\xbd\xb2\xe0\x96\xee\xd0\xc6\x2d\xc6\x05\x39\x9f\x99\x54\xe7\xe7\xbc\xcd\x51\x95\xc4\xb5\x7c\x42\x15\x59\x2e\x1a\xd9\xbd\x17\xf8\xaf\x26\x37\xdd\x3b\xb6\x46\x7f\x88\x7d\x3e\x7d\x5b\xe1\xb2\xf0\x5d\xde\x01\xa2\x28\x02\x76\xf0\xd0\x10\xd0\x27\x00\x9e\x9e\xb4\x2e\x68\x50\x8f\x49\x81\x9a\x93\x53\xbe\x21\xf1\xc3\x8f\x01\x4a\x4f\x32\xc6\x00\x28\x47\x63\x27\xa8\xf7\xd9\x23\xd5\x13\x17\xc1\x70\xe7\xb3\xa3\x7a\x55\x17\xcf\x30\x6b\xb4\xe5\x94\x3a\x4e\x90\xd4\x88\xd7\x59\x28\x80\xc5\x20\x31\x76\x21\x6c\x87\x26\x7d\x83\xee\xde\xdd\x1c\xab\x49\x4d\x8c\x4d\x23\x7a\x08\x14\x62\xd6\x33\x58\x5a\x8c\x77\xaf\x2b\xca\x2f\xda\x64\xcc\xbb\xcb\x85\x8a\x33\x74\x8e\x6c\x50\x62\x50\xc0\x82\xe3\x1d\xe9\x5d\x86\xfa\xcf\x54\x1c\x0e\x60\x52\xc0\xc2\xac\x49\x1e\x84\x50\x49\x56\x19\xba\xef\x72\xbf\x2f\xd1\x42\x04\xd7\xef\xa2\xf7\xd1\xdb\x6b\x38\xbe\xa0\xfd\xbe\x69\xb4\xd7\xc9\x3e\xf5\xe4\xc7\x24\x11\xf2\xfe\x92\xf6\x17\x22\x7e\x33\xb1\xb0\xe7\x54\x57\x84\xb9\xff\x6b\x19\x1b\x65\x87\x5c\xd2\x7f\xfb\x71\xba\x40\xfa\x81\x7b\x8b\xb5\xb3\x24\x57\xad\x51\x0c\x6e\x2c\x0d\x65\x8e\x22\xfb\x98\x07\x13\x56\x0d\xc6\x6a\xe0\xaf\xdd\x47\x97\xfc\x25\xa7\xc5\x3a\x1a\xdb\x33\x78\x8b\x9e\x16\x94\x4e\xf0\xcf\x84\x49\x08\x5f\x19\x1d\x4c\x5e\x4f\xc2\xc8\xff\x78\xaf\x8e\xa6\x7a\xb2\x22\x2f\xa4\x27\xd0\xcc\xe3\x14\x8d\x93\x14\xda\x02\xcd\xef\xf1\xea\x77\x00\x00\x00\xff\xff\x6d\x0c\x95\x26\x3f\x07\x00\x00")

func _lgraphqlProjectbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlProjectbynameGraphql,
		"_lgraphql/projectByName.graphql",
	)
}

func _lgraphqlProjectbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlProjectbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/projectByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlProjectbynamemetadataGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x54\xa8\xe6\x52\x50\x50\x50\x28\x28\xca\xcf\x4a\x4d\x2e\x71\xaa\xf4\x4b\xcc\x4d\xd5\x00\x0b\x29\x28\x40\x54\x82\x35\xc0\xd4\x81\x40\x66\x0a\x9c\x09\x92\x82\x73\x72\x53\x4b\x12\x53\x12\x4b\x12\xa1\x02\xb5\x5c\x20\x0c\x08\x00\x00\xff\xff\xd4\x75\x13\x1d\x79\x00\x00\x00")

func _lgraphqlProjectbynamemetadataGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlProjectbynamemetadataGraphql,
		"_lgraphql/projectByNameMetadata.graphql",
	)
}

func _lgraphqlProjectbynamemetadataGraphql() (*asset, error) {
	bytes, err := _lgraphqlProjectbynamemetadataGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/projectByNameMetadata.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlProjectsbymetadataGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\x4e\x2b\x31\x0c\x85\xf7\xf3\x14\xbe\xd5\x5d\xd0\x4d\x05\x1b\x16\x5d\x22\x2a\x84\x04\xa2\xa2\x85\xbd\x99\x71\xdb\xd0\xfc\x4c\x1d\x67\xa4\x51\x94\x77\x47\xd3\x29\x49\x11\x25\x2b\xeb\x3b\xce\xf1\x91\x1d\x23\xa8\x0d\x60\xab\xde\x89\x1f\x98\x50\x88\xd7\x3b\xb4\x2f\xbc\x38\x04\xd4\x30\x83\xc9\xcd\xec\x76\x76\x3d\x81\x94\xaa\x43\x20\xee\xe1\xaa\x02\x00\xf8\xbf\xa7\x7e\x0e\x2b\x61\x65\xb7\xff\x46\xd2\xa1\x0e\xf4\xcd\xa6\xf1\x08\x5b\x76\x9f\x54\x8b\xbf\xeb\x9f\x49\xb0\x41\xc1\xf1\xfb\xf0\xcc\x89\xcc\x21\x66\x36\xbc\xa3\xf3\xe0\xff\x83\x9e\xdc\xc7\x29\x59\x49\xc7\x6a\x5a\x0c\x54\x93\x4b\x8b\xa6\x34\x62\x10\xf7\xd8\xe8\x02\x3e\x18\x6d\xbd\x23\x9f\x41\x1b\xb4\x66\x3a\x04\xf2\xe2\x7f\x65\x2c\x5d\xec\x9a\x50\x8b\x72\x76\x61\x3b\xc5\xce\x1a\xb2\x52\xa6\xd4\xa2\x3a\x5a\xf5\x5e\xc8\xf8\x7b\x6a\xb5\xeb\x2f\x6b\x6b\xf4\xfb\xcb\xca\x2b\x19\xd7\xd1\x65\x6d\xc9\xce\x38\x29\xa2\x6b\xc9\xfa\x9d\xda\xc8\x72\x5c\xf3\x12\x45\x88\x6d\xd6\x1b\xea\x48\xbb\x76\x88\x78\x96\xd6\x3f\x29\xa3\x4a\xe6\xad\x92\x37\xd6\x7f\x2f\x2a\x0f\x39\xbf\xd2\xd9\x9a\xc7\x13\xa4\x2a\x55\x31\x02\xd9\x06\x52\xfa\x0a\x00\x00\xff\xff\x00\x3e\xbb\x56\x55\x02\x00\x00")

func _lgraphqlProjectsbymetadataGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlProjectsbymetadataGraphql,
		"_lgraphql/projectsByMetadata.graphql",
	)
}

func _lgraphqlProjectsbymetadataGraphql() (*asset, error) {
	bytes, err := _lgraphqlProjectsbymetadataGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/projectsByMetadata.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlRemoveprojectmetadatabykeyGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x31\x0b\xc2\x30\x10\x85\xf7\xfc\x8a\x6b\x71\xb0\x4b\xd1\xc5\x21\xa3\x20\x22\x22\x0a\x8a\xfb\x61\x4e\x8d\x9a\xb4\x1e\x57\xa1\x84\xfc\x77\x69\x2a\x55\x6f\xba\xf7\xc1\xfb\x5e\x08\x60\xcf\x80\xb5\x3d\x12\x2f\x99\x50\x88\x0f\x57\xf4\x5b\x5e\x3c\x1b\x7c\x40\x09\xf9\xb4\x9c\x95\x93\x1c\x62\x54\xae\x11\x14\x5b\x79\x18\x2b\x00\x80\x91\x35\x1a\x56\x5e\xb2\x3e\xdd\xa9\xd5\xb0\x17\xb6\xfe\x92\x15\x21\x31\x26\x57\xbd\x68\xc7\xd5\x8d\x4e\xb2\x21\x41\x83\x82\xf3\x76\x4d\x6d\x6f\xe8\xce\xfa\xba\x11\x1d\x86\x9c\x98\xd1\x9d\xfd\x8f\x25\x7d\x37\x32\xd0\x98\xbe\xe2\x5b\xfd\x69\x78\x74\x34\x04\xf7\x59\x56\x7d\x2b\xaa\x10\x80\xbc\x81\x18\xdf\x01\x00\x00\xff\xff\x82\x2b\x13\x86\xfe\x00\x00\x00")

func _lgraphqlRemoveprojectmetadatabykeyGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlRemoveprojectmetadatabykeyGraphql,
		"_lgraphql/removeProjectMetadataByKey.graphql",
	)
}

func _lgraphqlRemoveprojectmetadatabykeyGraphql() (*asset, error) {
	bytes, err := _lgraphqlRemoveprojectmetadatabykeyGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/removeProjectMetadataByKey.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlSwitchactivestandbyGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xb1\x8f\x82\x50\x0c\x87\xf7\xfe\x15\xbf\x23\x37\x1c\x0b\xb9\x1b\x8f\xcd\xc1\x38\x3a\x60\xdc\x2b\x54\xa9\x91\x82\xcf\xa2\x31\x2f\xef\x7f\x37\x18\xb0\x43\x93\x7e\xe9\xf7\xc5\x08\x3d\x82\x07\xdd\x4b\xd8\x04\x61\x97\xb0\x6b\xd9\xb6\x61\x7d\x1d\xf9\x82\x02\xd9\x5f\xf1\x5f\xfc\x66\x48\x89\xba\xd1\xd9\xb5\x37\xfc\x10\xf0\x3d\x84\xfe\x2c\xb5\x97\xa8\x3c\xa8\x9d\xbe\x08\xc8\x11\x09\xb8\x3d\xd4\xeb\x76\x55\xbb\xde\xa5\x72\xb6\xe6\xf0\x9c\x04\x40\x6d\x18\xbd\x7c\xff\x4c\xb3\x04\x96\x1b\x30\xee\xa4\xfc\x94\x67\x9c\x68\xd9\xf9\xac\x6a\x43\x13\x48\x14\x23\xc4\x1a\xa4\xf4\x0a\x00\x00\xff\xff\xf9\xe3\xea\x42\xc6\x00\x00\x00")

func _lgraphqlSwitchactivestandbyGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlSwitchactivestandbyGraphql,
		"_lgraphql/switchActiveStandby.graphql",
	)
}

func _lgraphqlSwitchactivestandbyGraphql() (*asset, error) {
	bytes, err := _lgraphqlSwitchactivestandbyGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/switchActiveStandby.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlTaskbyidGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x31\x0f\x82\x30\x10\x85\xf7\xfe\x8a\x27\x61\xc0\x85\xe8\xa8\xa3\x89\x31\x4c\x2e\xc6\xfd\x42\x4f\x6d\xa4\x05\x8e\x62\x42\x9a\xfe\x77\x43\x11\xa7\xfb\xee\xdd\xcb\x97\x0b\x01\xe6\x01\xea\xcc\x9d\xe5\x22\x4c\x9e\xe5\xf6\x22\x77\x95\x73\x3f\x52\x83\x12\xd9\xbe\x3c\x94\xbb\x0c\x31\xaa\x7e\x64\x99\x50\x28\x20\x37\xfa\x88\xca\xf9\x8d\x02\xb6\x41\x01\x9e\x86\xf7\x69\xaa\x74\x31\x1f\x72\xa3\x53\x08\x18\x9d\x86\x23\xcb\x09\xea\xd6\x5a\x72\x4b\x38\x78\xf2\xe3\xb0\xa2\x78\xd6\x6b\xa5\x6b\xf8\xbf\xa5\x97\x16\x6e\xda\xe7\x52\x17\xb6\xad\xe7\xea\xa7\x61\xf9\x98\x7a\xd6\x47\x15\x55\x08\x60\xa7\x11\xe3\x37\x00\x00\xff\xff\xb1\xdc\x9e\x8c\xd8\x00\x00\x00")

func _lgraphqlTaskbyidGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlTaskbyidGraphql,
		"_lgraphql/taskByID.graphql",
	)
}

func _lgraphqlTaskbyidGraphql() (*asset, error) {
	bytes, err := _lgraphqlTaskbyidGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/taskByID.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlUpdatedeploytargetconfigGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x4e\xf4\x30\x0c\x85\xf7\x39\x45\x7e\x69\x16\x33\x57\xe8\xf6\x67\xc3\x06\x55\xc0\x05\x42\xe3\x49\x8d\x32\x4e\xf0\x38\xa0\x11\xea\xdd\x51\x1b\x28\x71\x19\xf0\xaa\x79\xef\xd5\x7a\xfe\x4e\x45\x9c\x60\x22\xbb\x37\xd6\x5a\xbb\x43\xdf\xd9\x5b\x92\x7f\xf5\xf5\x06\x18\x46\x59\x94\x2a\x3c\xb1\xa3\x61\x84\x73\x67\x1f\x84\x91\x42\x55\x73\x89\x91\xe1\xa5\xc0\x59\x36\x8e\x87\x1c\xd3\xe5\xd1\x71\x80\x76\x4d\x2b\xf7\x9c\x9e\x61\x90\xde\x89\x00\xd3\xfa\xfb\xe1\x7d\x89\x96\xec\x9d\xc0\x4d\x93\xff\x9f\xe8\x88\x61\x8f\x94\x8b\x74\x35\x34\xcf\x5c\x7c\x87\x7e\x7d\x67\x27\xc3\xd8\xf8\xf3\xe8\x36\xaa\x85\xca\x7d\x9d\xfd\x79\xbf\xf2\xbe\x09\xac\x30\x94\xaf\x59\x28\x34\xbf\x76\xd9\x22\xf8\x83\xcf\xba\x63\x5a\xbe\xa6\x43\x4b\xc0\x5c\x5b\xae\x11\x34\xa1\x79\xc8\x9d\x40\x09\x47\x46\x20\x1f\x2f\x77\x5b\x63\x88\xa9\xf8\x9e\xd3\x2b\x7a\xe0\x9f\xce\x3d\x04\x4c\xdb\x76\x2d\x2f\x73\x0d\x90\xd1\xc4\xeb\x49\x66\xfa\x08\x00\x00\xff\xff\x82\xe7\x64\x80\x95\x02\x00\x00")

func _lgraphqlUpdatedeploytargetconfigGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlUpdatedeploytargetconfigGraphql,
		"_lgraphql/updateDeployTargetConfig.graphql",
	)
}

func _lgraphqlUpdatedeploytargetconfigGraphql() (*asset, error) {
	bytes, err := _lgraphqlUpdatedeploytargetconfigGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/updateDeployTargetConfig.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlUpdateprojectmetadataGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\xc2\x30\x10\x86\x77\x3f\xc5\x35\xea\xd0\x2c\x51\xbb\x74\xf0\x5e\x55\x1d\x2a\x90\x40\xec\xa7\xf8\x20\x86\xc4\x31\xd6\x19\x09\x59\x7e\x77\xe4\x38\x10\x2c\x6e\xf2\x7d\xe7\xbb\xff\x0b\x01\xf4\x1e\xd0\xea\x1d\xb9\x5f\x47\xc8\xe4\xb6\x1d\x9a\x95\xfb\x39\x7b\xec\xa1\x81\xea\xab\xf9\x6e\x3e\x2b\x88\x51\x0c\x9e\x91\xf5\x68\xe0\x43\x00\x00\xbc\x6b\x25\xe1\xcf\xf0\x5b\xee\x4e\x74\x95\xb0\x61\xa7\xcd\x61\x26\x17\xec\x3d\xdd\x59\x1d\x26\xe8\xad\x42\xa6\xb5\x1b\x8f\xd4\xf2\x3f\x31\x2a\x64\xcc\xf7\x52\x69\x63\x3d\xcb\xf0\xe8\x27\xa6\x64\xca\x2a\x98\x45\x6e\x3b\x09\xe5\xc7\x54\x93\x45\x72\x79\x99\xcc\x36\xd9\xaa\x98\x46\x51\xbe\xea\xe5\xec\x53\xac\xc1\x61\x59\x1b\x66\x73\x91\xb7\xa2\x08\x01\xc8\x28\x88\xf1\x16\x00\x00\xff\xff\xa5\x4e\x06\xe0\x51\x01\x00\x00")

func _lgraphqlUpdateprojectmetadataGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlUpdateprojectmetadataGraphql,
		"_lgraphql/updateProjectMetadata.graphql",
	)
}

func _lgraphqlUpdateprojectmetadataGraphql() (*asset, error) {
	bytes, err := _lgraphqlUpdateprojectmetadataGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/updateProjectMetadata.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"_lgraphql/addDeployTargetConfig.graphql":          _lgraphqlAdddeploytargetconfigGraphql,
	"_lgraphql/addEnvVariable.graphql":                 _lgraphqlAddenvvariableGraphql,
	"_lgraphql/addGroup.graphql":                       _lgraphqlAddgroupGraphql,
	"_lgraphql/addGroupsToProject.graphql":             _lgraphqlAddgroupstoprojectGraphql,
	"_lgraphql/addNotificationEmail.graphql":           _lgraphqlAddnotificationemailGraphql,
	"_lgraphql/addNotificationMicrosoftTeams.graphql":  _lgraphqlAddnotificationmicrosoftteamsGraphql,
	"_lgraphql/addNotificationRocketChat.graphql":      _lgraphqlAddnotificationrocketchatGraphql,
	"_lgraphql/addNotificationSlack.graphql":           _lgraphqlAddnotificationslackGraphql,
	"_lgraphql/addNotificationToProject.graphql":       _lgraphqlAddnotificationtoprojectGraphql,
	"_lgraphql/addOrUpdateEnvironment.graphql":         _lgraphqlAddorupdateenvironmentGraphql,
	"_lgraphql/addProject.graphql":                     _lgraphqlAddprojectGraphql,
	"_lgraphql/addRestore.graphql":                     _lgraphqlAddrestoreGraphql,
	"_lgraphql/addSshKey.graphql":                      _lgraphqlAddsshkeyGraphql,
	"_lgraphql/addUser.graphql":                        _lgraphqlAdduserGraphql,
	"_lgraphql/addUserToGroup.graphql":                 _lgraphqlAddusertogroupGraphql,
	"_lgraphql/backupsForEnvironmentByName.graphql":    _lgraphqlBackupsforenvironmentbynameGraphql,
	"_lgraphql/deleteDeployTargetConfig.graphql":       _lgraphqlDeletedeploytargetconfigGraphql,
	"_lgraphql/deployEnvironmentBranch.graphql":        _lgraphqlDeployenvironmentbranchGraphql,
	"_lgraphql/deployEnvironmentLatest.graphql":        _lgraphqlDeployenvironmentlatestGraphql,
	"_lgraphql/deployEnvironmentPromote.graphql":       _lgraphqlDeployenvironmentpromoteGraphql,
	"_lgraphql/deployEnvironmentPullrequest.graphql":   _lgraphqlDeployenvironmentpullrequestGraphql,
	"_lgraphql/deployTargetConfigsByProjectId.graphql": _lgraphqlDeploytargetconfigsbyprojectidGraphql,
	"_lgraphql/environmentByName.graphql":              _lgraphqlEnvironmentbynameGraphql,
	"_lgraphql/lagoonSchema.graphql":                   _lgraphqlLagoonschemaGraphql,
	"_lgraphql/lagoonVersion.graphql":                  _lgraphqlLagoonversionGraphql,
	"_lgraphql/me.graphql":                             _lgraphqlMeGraphql,
	"_lgraphql/minimalProjectByName.graphql":           _lgraphqlMinimalprojectbynameGraphql,
	"_lgraphql/projectByName.graphql":                  _lgraphqlProjectbynameGraphql,
	"_lgraphql/projectByNameMetadata.graphql":          _lgraphqlProjectbynamemetadataGraphql,
	"_lgraphql/projectsByMetadata.graphql":             _lgraphqlProjectsbymetadataGraphql,
	"_lgraphql/removeProjectMetadataByKey.graphql":     _lgraphqlRemoveprojectmetadatabykeyGraphql,
	"_lgraphql/switchActiveStandby.graphql":            _lgraphqlSwitchactivestandbyGraphql,
	"_lgraphql/taskByID.graphql":                       _lgraphqlTaskbyidGraphql,
	"_lgraphql/updateDeployTargetConfig.graphql":       _lgraphqlUpdatedeploytargetconfigGraphql,
	"_lgraphql/updateProjectMetadata.graphql":          _lgraphqlUpdateprojectmetadataGraphql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"_lgraphql": &bintree{nil, map[string]*bintree{
		"addDeployTargetConfig.graphql":          &bintree{_lgraphqlAdddeploytargetconfigGraphql, map[string]*bintree{}},
		"addEnvVariable.graphql":                 &bintree{_lgraphqlAddenvvariableGraphql, map[string]*bintree{}},
		"addGroup.graphql":                       &bintree{_lgraphqlAddgroupGraphql, map[string]*bintree{}},
		"addGroupsToProject.graphql":             &bintree{_lgraphqlAddgroupstoprojectGraphql, map[string]*bintree{}},
		"addNotificationEmail.graphql":           &bintree{_lgraphqlAddnotificationemailGraphql, map[string]*bintree{}},
		"addNotificationMicrosoftTeams.graphql":  &bintree{_lgraphqlAddnotificationmicrosoftteamsGraphql, map[string]*bintree{}},
		"addNotificationRocketChat.graphql":      &bintree{_lgraphqlAddnotificationrocketchatGraphql, map[string]*bintree{}},
		"addNotificationSlack.graphql":           &bintree{_lgraphqlAddnotificationslackGraphql, map[string]*bintree{}},
		"addNotificationToProject.graphql":       &bintree{_lgraphqlAddnotificationtoprojectGraphql, map[string]*bintree{}},
		"addOrUpdateEnvironment.graphql":         &bintree{_lgraphqlAddorupdateenvironmentGraphql, map[string]*bintree{}},
		"addProject.graphql":                     &bintree{_lgraphqlAddprojectGraphql, map[string]*bintree{}},
		"addRestore.graphql":                     &bintree{_lgraphqlAddrestoreGraphql, map[string]*bintree{}},
		"addSshKey.graphql":                      &bintree{_lgraphqlAddsshkeyGraphql, map[string]*bintree{}},
		"addUser.graphql":                        &bintree{_lgraphqlAdduserGraphql, map[string]*bintree{}},
		"addUserToGroup.graphql":                 &bintree{_lgraphqlAddusertogroupGraphql, map[string]*bintree{}},
		"backupsForEnvironmentByName.graphql":    &bintree{_lgraphqlBackupsforenvironmentbynameGraphql, map[string]*bintree{}},
		"deleteDeployTargetConfig.graphql":       &bintree{_lgraphqlDeletedeploytargetconfigGraphql, map[string]*bintree{}},
		"deployEnvironmentBranch.graphql":        &bintree{_lgraphqlDeployenvironmentbranchGraphql, map[string]*bintree{}},
		"deployEnvironmentLatest.graphql":        &bintree{_lgraphqlDeployenvironmentlatestGraphql, map[string]*bintree{}},
		"deployEnvironmentPromote.graphql":       &bintree{_lgraphqlDeployenvironmentpromoteGraphql, map[string]*bintree{}},
		"deployEnvironmentPullrequest.graphql":   &bintree{_lgraphqlDeployenvironmentpullrequestGraphql, map[string]*bintree{}},
		"deployTargetConfigsByProjectId.graphql": &bintree{_lgraphqlDeploytargetconfigsbyprojectidGraphql, map[string]*bintree{}},
		"environmentByName.graphql":              &bintree{_lgraphqlEnvironmentbynameGraphql, map[string]*bintree{}},
		"lagoonSchema.graphql":                   &bintree{_lgraphqlLagoonschemaGraphql, map[string]*bintree{}},
		"lagoonVersion.graphql":                  &bintree{_lgraphqlLagoonversionGraphql, map[string]*bintree{}},
		"me.graphql":                             &bintree{_lgraphqlMeGraphql, map[string]*bintree{}},
		"minimalProjectByName.graphql":           &bintree{_lgraphqlMinimalprojectbynameGraphql, map[string]*bintree{}},
		"projectByName.graphql":                  &bintree{_lgraphqlProjectbynameGraphql, map[string]*bintree{}},
		"projectByNameMetadata.graphql":          &bintree{_lgraphqlProjectbynamemetadataGraphql, map[string]*bintree{}},
		"projectsByMetadata.graphql":             &bintree{_lgraphqlProjectsbymetadataGraphql, map[string]*bintree{}},
		"removeProjectMetadataByKey.graphql":     &bintree{_lgraphqlRemoveprojectmetadatabykeyGraphql, map[string]*bintree{}},
		"switchActiveStandby.graphql":            &bintree{_lgraphqlSwitchactivestandbyGraphql, map[string]*bintree{}},
		"taskByID.graphql":                       &bintree{_lgraphqlTaskbyidGraphql, map[string]*bintree{}},
		"updateDeployTargetConfig.graphql":       &bintree{_lgraphqlUpdatedeploytargetconfigGraphql, map[string]*bintree{}},
		"updateProjectMetadata.graphql":          &bintree{_lgraphqlUpdateprojectmetadataGraphql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
